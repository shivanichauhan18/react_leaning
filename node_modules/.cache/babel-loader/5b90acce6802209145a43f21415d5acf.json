{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/navgurukul/Desktop/react-learning/src/components/PaginationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useMemo } from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, GROUPED_COLUMNS } from './columns';\nimport './table.css';\nexport const PaginationTable = () => {\n  _s();\n\n  const columns = useMemo(() => GROUPED_COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    nextPage,\n    previousPage,\n    page,\n    canNextPage,\n    canPreviousPage,\n    gotoPage,\n    pageCount,\n    pageOptions,\n    state,\n    prepareRow\n  } = tableInstance;\n  const {\n    pageIndex\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: page.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"page\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to page:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaginationTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = PaginationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"sources":["/home/navgurukul/Desktop/react-learning/src/components/PaginationTable.js"],"names":["React","memo","useMemo","useTable","usePagination","MOCK_DATA","COLUMNS","GROUPED_COLUMNS","PaginationTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","nextPage","previousPage","page","canNextPage","canPreviousPage","gotoPage","pageCount","pageOptions","state","prepareRow","pageIndex","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,aAAxC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,WAAzC;AACA,OAAO,aAAP;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC,QAAMC,OAAO,GAAGP,OAAO,CAAC,MAAMK,eAAP,EAAwB,EAAxB,CAAvB;AACA,QAAMG,IAAI,GAAGR,OAAO,CAAC,MAAMG,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAMM,aAAa,GAAGR,QAAQ,CAAC;AAC3BM,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,EAG3BN,aAH2B,CAA9B;AAKA,QAAM;AACFQ,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,YALE;AAMFC,IAAAA,IANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA,eARE;AASFC,IAAAA,QATE;AAUFC,IAAAA,SAVE;AAWFC,IAAAA,WAXE;AAWWC,IAAAA,KAXX;AAYFC,IAAAA;AAZE,MAaFb,aAbJ;AAeA,QAAM;AAAEc,IAAAA;AAAF,MAAgBF,KAAtB;AAEA,sBACI;AAAA,4BACI,sBAAWX,aAAa,EAAxB;AAAA,8BACI;AAAA,kBACKE,YAAY,CAACY,GAAb,CAAkBC,WAAD,iBACd,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACrB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,sBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,sBAAWnB,iBAAiB,EAA5B;AAAA,kBACKI,IAAI,CAACS,GAAL,CAAUO,GAAD,IAAS;AACfT,UAAAA,UAAU,CAACS,GAAD,CAAV;AACA,8BACI,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACpB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAXA;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eA4BI;AAAA,8BACI;AAAA,2BACS,GADT,eAEI;AAAA,qBACKP,SAAS,GAAG,CADjB,UACwBH,WAAW,CAACgB,MADpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIc,GAJd;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,oCACkB,GADlB,eAEI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAQ,QAAA,OAAO,EAAE,MAAMlB,QAAQ,CAAC,CAAD,CAA/B;AAAoC,QAAA,QAAQ,EAAE,CAACD,eAA/C;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAXJ,eAcI;AAAQ,QAAA,OAAO,EAAE,MAAMH,YAAY,EAAnC;AAAuC,QAAA,QAAQ,EAAE,CAACG,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAQ,QAAA,OAAO,EAAE,MAAMJ,QAAQ,EAA/B;AAAmC,QAAA,QAAQ,EAAE,CAACG,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI;AAAQ,QAAA,OAAO,EAAE,MAAME,QAAQ,CAACC,SAAS,GAAC,CAAX,CAA/B;AAA8C,QAAA,QAAQ,EAAE,CAACH,WAAzD;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA,kBADJ;AAmDH,CA7EM;;GAAMV,e;UAIaL,Q;;;KAJbK,e","sourcesContent":["import React, { memo, useMemo } from 'react'\nimport { useTable, usePagination } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS, GROUPED_COLUMNS } from './columns'\nimport './table.css'\n\nexport const PaginationTable = () => {\n    const columns = useMemo(() => GROUPED_COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    }, usePagination)\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        nextPage,\n        previousPage,\n        page,\n        canNextPage,\n        canPreviousPage,\n        gotoPage,\n        pageCount,\n        pageOptions, state,\n        prepareRow\n    } = tableInstance\n\n    const { pageIndex } = state\n\n    return (\n        <>\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {\n                                    row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                    })\n                                }\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n\n            </table>\n            <div>\n                <span>\n                    page{' '}\n                    <strong>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </strong>{' '}\n                </span>\n                <span>\n                    | Go to page:{' '}\n                    <input type='number'/>\n                </span>\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                    {'<<'}\n                </button>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>next</button>\n                <button onClick={() => gotoPage(pageCount-1)} disabled={!canNextPage}>\n                    {'>>'}\n                </button>\n            </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}