{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/navgurukul/Desktop/react-learning/src/components/RowSelection.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, GROUPED_COLUMNS } from './columns';\nimport './table.css';\nexport const RowSelection = () => {\n  _s();\n\n  const columns = useMemo(() => GROUPED_COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  const firstPageRows = rows.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: firstPageRows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterGroupProps,\n          children: column.render('Footer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RowSelection, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = RowSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowSelection\");","map":{"version":3,"sources":["/home/navgurukul/Desktop/react-learning/src/components/RowSelection.js"],"names":["React","memo","useMemo","useTable","MOCK_DATA","COLUMNS","GROUPED_COLUMNS","RowSelection","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,EAAiBC,eAAjB,QAAwC,WAAxC;AACA,OAAO,aAAP;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGN,OAAO,CAAC,MAAMI,eAAP,EAAwB,EAAxB,CAAvB;AACA,QAAMG,IAAI,GAAGP,OAAO,CAAC,MAAME,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAMM,aAAa,GAAGP,QAAQ,CAAC;AAC7BK,IAAAA,OAD6B;AAE7BC,IAAAA;AAF6B,GAAD,CAA9B;AAKA,QAAM;AACJE,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAMJC,IAAAA,IANI;AAOJC,IAAAA;AAPI,MAQFN,aARJ;AAUA,QAAMO,aAAa,GAAGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAa,EAAb,CAAtB;AAEA,sBACE,sBAAWP,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACM,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBAC3B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADG;AADL;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAWb,iBAAiB,EAA5B;AAAA,gBACKK,aAAa,CAACE,GAAd,CAAmBO,GAAD,IAAS;AACxBV,QAAAA,UAAU,CAACU,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBAEQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAU;AACpB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFD;AAFR;AAAA;AAAA;AAAA;AAAA,gBADF;AASH,OAXA;AADL;AAAA;AAAA;AAAA;AAAA,YAVF,eAyBE;AAAA,gBACGX,YAAY,CAACK,GAAb,CAAiBY,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBAEID,WAAW,CAACT,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC5B,mBAAQA,MAAM,CAACS,mBAAf;AAAA,oBAEIT,MAAM,CAACE,MAAP,CAAc,QAAd;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAjEM;;GAAMlB,Y;UAIWJ,Q;;;KAJXI,Y","sourcesContent":["import React, { memo, useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from './MOCK_DATA.json'\nimport { COLUMNS,GROUPED_COLUMNS } from './columns'\nimport './table.css'\n\nexport const RowSelection = () => {\n  const columns = useMemo(() => GROUPED_COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const tableInstance = useTable({\n    columns,\n    data\n  })\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups\n    ,\n    rows,\n    prepareRow\n  } = tableInstance\n\n  const firstPageRows = rows.slice(0,10)\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n          {firstPageRows.map((row) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                    {\n                        row.cells.map((cell) => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })\n                    }\n              </tr>\n              )\n          })}\n        \n      </tbody>\n      <tfoot>\n        {footerGroups.map(footerGroup =>(\n          <tr {...footerGroup.getFooterGroupProps()}>\n            {\n              footerGroup.headers.map(column =>(\n                <td {...column.getFooterGroupProps}>\n                  {\n                    column.render('Footer')\n                  }\n\n                </td>\n              ))\n            }\n          </tr>\n        ))}\n      </tfoot>\n    </table>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}